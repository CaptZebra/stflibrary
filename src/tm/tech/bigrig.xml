<article class="techreport" id="bigrig">
  <title>Basic I/O Grunt, Regimented Information Grouper</title>
  <titleabbrev>BIGRIG</titleabbrev>
  <articleinfo>
    <authorgroup role="Maintainer">
      <author>
        <firstname>Larry</firstname>
        <surname>Garfield</surname>
      </author>
    </authorgroup>
    <authorgroup role="Primary Designers">
      <author>
        <firstname>Larry</firstname>
        <surname>Garfield</surname>
      </author>
    </authorgroup>
    <authorgroup role="Original Designers">
      <author>
        <firstname>Larry</firstname>
        <surname>Garfield</surname>
      </author>
    </authorgroup>
    <keywordset>
      <keyword role="type">Starship</keyword>
      <keyword role="category">Computer System</keyword>
      <keyword role="mark">I</keyword>
    </keywordset>
    <revhistory>
      <revision>
        <revnumber>1</revnumber>
        <date>9 September 1999</date>
        <revdescription>
          <para>Approved by Engineering Director Colin Wyers</para>
        </revdescription>
      </revision>
    </revhistory>
  </articleinfo>
  <section>
    <title>Description</title>
    <para>Faced with the growing demand on supplies created by the Crag and Dominion Wars, Starfleet decided that a new standard freighter was needed to maintain the supply backbone of the Federation.  The first of the new Monolith-class long range tugs went operational in early 2375, and like many late 24th century starships was equipped with a Nyetscape computer system.</para>
    <para>Abraxis Shipworks, the construction company responsible for the Monolith, had early on decided to go with a Nyetscape computer system due to Nyetscape's long standing quality and high executive salaries.  They opted, however, to forgo an Artificial Intelligence system for cost reasons, a limitation that Nyetscape accepted.</para>
    <para>Nyetscape decided to design only a new Operating System for the Monolith, and use the Starfleet-standard MAJEL interface, a decision which shaved 3 months off of the design time.  They also used a low-cost K-66 core and DC-3 chipset, both provided by Nyetscape partner Federation Micro Designs.  The OS itself was designed specifically to handle the requirements of a tug/freighter-class ship, specifically:</para>
    <simplelist>
      <member>Handling all general ship operation input</member>
      <member>Control and translation of helm and ops functions</member>
      <member>transportation of raw and processed material and machinery</member>
      <member>Invoice and PO tracking data storage and categorization</member>
    </simplelist>
    <para>To this end, Nyetscape designed a system that consisted of two basic structures; a ship-function division and a database management division.  The ship management division of the OS was written around the ship's particular characteristics, and was not designed to be portable.  There was little revolutionary in the design, as such innovation would be wasted on a tug.  This portion of the OS formed the Basic Input/Output Grunt, so called almost as a gag by the designers.</para>
    <para>The database portion was more challenging.  It's primary goal was filing, data management, and categorization of the miriad of cargo into coherent groups for easier access.  Nyetscape engineers considered both relational and object-oriented approaches to the system, before settling on a Solid Information Descriptor system (SID).  The SID was designed to catalogue all the information entered into it and, following a strict, fleet-wide regimen, classified the information into pre-defined groups.  These groups were then sub-filed using an object-oriented model, for greater flexibility.  The Regimented Information Grouper division of the OS was written as a semi-independent module, so that it could potentially be ported to other starships and platforms at a later date.</para>
    <para>The Basic I/O Grunt, Regimented Information Grouper (BIGRIG) OS took approximately 7 months to design, code, and test.  The final product was a rock solid, stable, if unimpressive from the user-end system, which Abraxis readily accepted and built into the entire Monolith line.  BIGRIG did not dazzle the marketplace or the user, as previous offerings such as GORBI and BORIS had, but served as the stable core for a stable and successful starship line.</para>
  </section>
</article>
